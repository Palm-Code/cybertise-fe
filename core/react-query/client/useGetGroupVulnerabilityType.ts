"use client";
import { I_GetGroupVulnerabilityTypeSuccessResponse } from "@/core/models/common";
import { I_GetErrorResponse } from "@/core/models/hacker/programs";
import { fetchGetGroupVulnerabilityType } from "@/core/services/common";
import { keepPreviousData, useQuery } from "@tanstack/react-query";

export const useGetGroupVulnerabilityType = () => {
  const { data, error, isError, isSuccess } = useQuery<
    I_GetGroupVulnerabilityTypeSuccessResponse,
    I_GetErrorResponse
  >({
    queryKey: ["getGroupVulnerabilityType"],
    queryFn: () => fetchGetGroupVulnerabilityType(),
    placeholderData: keepPreviousData,
    refetchOnMount: false,
  });

  if (isError) {
    return {
      data: {},
      error,
      isError,
    };
  }

  const groupVulnerabilityData = data?.data;
  if (isSuccess) {
    return {
      data: groupVulnerabilityData,
      error,
      isError,
    };
  }

  return {
    data: groupVulnerabilityData,
    error,
    isError,
  };
};
