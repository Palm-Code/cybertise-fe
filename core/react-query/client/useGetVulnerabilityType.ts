"use client";
import { I_GetVulnerabilityTypeSuccessResponse } from "@/core/models/common";
import { I_GetErrorResponse } from "@/core/models/hacker/programs";
import { fetchGetVulnerabilityType } from "@/core/services/common";
import { keepPreviousData, useQuery } from "@tanstack/react-query";

export const useGetVulnerabilityType = () => {
  const { data, error, isError } = useQuery<
    I_GetVulnerabilityTypeSuccessResponse,
    I_GetErrorResponse
  >({
    queryKey: ["getVulnerabilityType"],
    queryFn: () => fetchGetVulnerabilityType(),
    placeholderData: keepPreviousData,
  });

  if (isError) {
    return {
      data: [],
      error,
      isError,
    };
  }

  return {
    data: data?.data || [],
    error,
    isError,
  };
};
