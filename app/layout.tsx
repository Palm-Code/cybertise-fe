import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.scss";
import { cn } from "@/core/lib/utils";
import Sidebar from "@/core/ui/layout/admin/Sidebar.layout";
import NextTopLoader from "nextjs-toploader";
import { Role } from "@/types/admin/sidebar";
import { getSession } from "@/service/server/session";
import { Desktop, Mobile } from "@/core/ui/layout";
import { ReactQueryProvider, ThemeProvider } from "@/core/provider";
import HydrationZustand from "@/core/provider/hydration";
import { Toaster } from "@/core/ui/components";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Cybertise",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const session = await getSession();

  const colors: Record<Role, string> = {
    hacker: "#BAFF00",
    company: "#4BA2E3",
    mediator: "#845EEE",
  };

  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={cn(
          inter.className,
          "bg-background-page-light dark:bg-background-page-dark",
          session && "overflow-hidden"
        )}
      >
        <NextTopLoader
          color={colors[session?.user.role as Role]}
          showSpinner={false}
        />
        <HydrationZustand>
          <ReactQueryProvider>
            <ThemeProvider
              attribute="class"
              defaultTheme="dark"
              disableTransitionOnChange
            >
              {session ? (
                <>
                  <Mobile>
                    <div className="h-dvh w-full overflow-hidden">
                      <Sidebar type={session?.user.role} />
                      {children}
                    </div>
                  </Mobile>
                  <Desktop>
                    <div className="grid h-screen w-full grid-cols-[auto_1fr] overflow-hidden">
                      <Sidebar type={session?.user.role} />
                      {children}
                    </div>
                  </Desktop>
                </>
              ) : (
                <>{children}</>
              )}
            </ThemeProvider>
            <Toaster position="top-center" />
          </ReactQueryProvider>
        </HydrationZustand>
      </body>
    </html>
  );
}
