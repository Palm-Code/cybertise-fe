import "./globals.scss";
import "highlight.js/styles/default.css";
import NextTopLoader from "nextjs-toploader";
import { Inter } from "@/public/fonts/inter";
import type { Metadata } from "next";
import { cn } from "@/core/lib/utils";
import { Role } from "@/types/admin/sidebar";
import { getSession } from "@/service/server/session";
import {
  getQueryClient,
  Hydrate,
  ReactQueryProvider,
  ThemeProvider,
} from "@/core/provider";
import { Toaster } from "@/core/ui/components";
import { getLocale, getMessages } from "next-intl/server";
import { NextIntlClientProvider } from "next-intl";
import { fetchGetCountryList } from "@/core/services/common";
import CountryListInitializer from "@/core/zustands/country-list/initializer";
import { dehydrate } from "@tanstack/react-query";
import { prefetchGetUserData } from "@/core/react-query/server";
import { UserInitializer } from "@/core/zustands/user";

export const revalidate = 0;

export const metadata: Metadata = {
  title: {
    default: "Sparta",
    template: "%s | Sparta",
  },
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const locale = await getLocale();
  const session = await getSession();
  // const requestHeaders = headers().get("x-url");

  // const includedArray = [
  //   "/auth",
  //   "/authorize",
  //   "/forgot-password",
  //   "/set-password",
  //   "/faq",
  //   "/policy",
  //   "/terms-and-conditions",
  // ];

  const colors: Record<Role, string> = {
    hacker: "#BAFF00",
    company: "#4BA2E3",
    "company staff": "#4BA2E3",
    mediator: "#845EEE",
  };

  const messages = await getMessages();
  const countryList = await fetchGetCountryList();
  const user = await prefetchGetUserData();

  return (
    <html lang={locale} suppressHydrationWarning>
      <body
        className={cn(
          Inter.className,
          "hyphens-auto bg-background-page-light dark:bg-background-page-dark"
          // !containsIncludedPath ? "overflow-hidden" : ""
        )}
      >
        <NextTopLoader
          color={
            colors[session?.user.role as Role]
              ? colors[session?.user.role as Role]
              : "#BAFF00"
          }
          showSpinner={false}
        />
        <NextIntlClientProvider messages={messages}>
          <ReactQueryProvider>
            <Hydrate state={dehydrate(getQueryClient())}>
              <ThemeProvider
                attribute="class"
                defaultTheme="dark"
                disableTransitionOnChange
              >
                <UserInitializer users={user}>
                  <CountryListInitializer countryList={countryList}>
                    {children}
                  </CountryListInitializer>
                </UserInitializer>
              </ThemeProvider>
            </Hydrate>
            <Toaster position="top-center" />
          </ReactQueryProvider>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
